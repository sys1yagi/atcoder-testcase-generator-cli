package {{ .testData.Package }}
import testtool.StandardInOutRule
import testtool.emptyArgs
import org.assertj.core.api.Assertions
import org.junit.Rule
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.Arguments
import org.junit.jupiter.params.provider.MethodSource
import java.io.File

class {{ .testData.Problem }}KtTest {
    @get:Rule
    val rule = StandardInOutRule()

    companion object {
        @JvmStatic
        fun generator(): List<Arguments> {
            return listOf(
                {{ .testData.InOutList }}
            )
        }
    }

    @ParameterizedTest
    @MethodSource("generator")
    fun main(input: String, output: String) {
        val inValue = File("./test/atcoder/{{ .testData.ContestName }}/{{ .testData.Problem }}/in_${input}")?.readText()?.trimIndent()
        val outValue = File("./test/atcoder/{{ .testData.ContestName }}/{{ .testData.Problem }}/out_${output}")?.readText()?.trimIndent()
        rule.setIn(inValue)
        val result = rule.captureString()
        main(emptyArray())
        Assertions.assertThat(result.captured).isEqualTo(outValue)
    }
}

